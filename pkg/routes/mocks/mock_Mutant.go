// Code generated by MockGen. DO NOT EDIT.
// Source: ../mutant/mutant.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMutant is a mock of Mutant interface
type MockMutant struct {
	ctrl     *gomock.Controller
	recorder *MockMutantMockRecorder
}

// MockMutantMockRecorder is the mock recorder for MockMutant
type MockMutantMockRecorder struct {
	mock *MockMutant
}

// NewMockMutant creates a new mock instance
func NewMockMutant(ctrl *gomock.Controller) *MockMutant {
	mock := &MockMutant{ctrl: ctrl}
	mock.recorder = &MockMutantMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMutant) EXPECT() *MockMutantMockRecorder {
	return m.recorder
}

// IsMutant mocks base method
func (m *MockMutant) IsMutant(dna []string) (*bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsMutant", dna)
	ret0, _ := ret[0].(*bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IsMutant indicates an expected call of IsMutant
func (mr *MockMutantMockRecorder) IsMutant(dna interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsMutant", reflect.TypeOf((*MockMutant)(nil).IsMutant), dna)
}
