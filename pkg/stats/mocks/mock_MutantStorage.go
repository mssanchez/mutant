// Code generated by MockGen. DO NOT EDIT.
// Source: ../storage/mutant.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	storage "mutant/pkg/storage"
	reflect "reflect"
)

// MockMutantStorage is a mock of MutantStorage interface
type MockMutantStorage struct {
	ctrl     *gomock.Controller
	recorder *MockMutantStorageMockRecorder
}

// MockMutantStorageMockRecorder is the mock recorder for MockMutantStorage
type MockMutantStorageMockRecorder struct {
	mock *MockMutantStorage
}

// NewMockMutantStorage creates a new mock instance
func NewMockMutantStorage(ctrl *gomock.Controller) *MockMutantStorage {
	mock := &MockMutantStorage{ctrl: ctrl}
	mock.recorder = &MockMutantStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMutantStorage) EXPECT() *MockMutantStorageMockRecorder {
	return m.recorder
}

// Save mocks base method
func (m *MockMutantStorage) Save(val *storage.MutantDoc) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", val)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save
func (mr *MockMutantStorageMockRecorder) Save(val interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockMutantStorage)(nil).Save), val)
}

// Count mocks base method
func (m *MockMutantStorage) Count(isMutant bool) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Count", isMutant)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Count indicates an expected call of Count
func (mr *MockMutantStorageMockRecorder) Count(isMutant interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Count", reflect.TypeOf((*MockMutantStorage)(nil).Count), isMutant)
}

// Shutdown mocks base method
func (m *MockMutantStorage) Shutdown() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Shutdown")
}

// Shutdown indicates an expected call of Shutdown
func (mr *MockMutantStorageMockRecorder) Shutdown() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Shutdown", reflect.TypeOf((*MockMutantStorage)(nil).Shutdown))
}
